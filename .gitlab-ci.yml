#deploy:
#  stage: deploy
#  script:
#  - gem install dpl
#  - dpl --provider=heroku --app=food-truck-finder-2-prod #--api-key=6be52674-0cd9-4295-88ca-0a8b9868f3c2
image: docker:latest #getting a linux vm, installing latest docker command, what kind of os should the app be run on
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay
  DOCKER_TLS_CERTDIRL: "/certs"

stages:
  - build

deploy-api:
  stage: build
  script:
    - docker build -f docker/food-truck-api.Dockerfile --iidfile imageid.txt -t https://dashboard.heroku.com/apps/food-truck-finder-2-prod ./food-truck-api
    - docker login -u sam_hobbs1@baylor.edu -p 6be52674-0cd9-4295-88ca-0a8b9868f3c2 https://dashboard.heroku.com
    - docker tag $(cat imageid.txt) registry.heroku.com/food-truck2-app/web
    - docker push registry.heroku.com/food-truck2-app/web
    - apk add --no-cache curl #install curl command to command line
    - echo "Docker Image ID is $(cat imageid.txt)"
    - |- #deploy our new docker image
     
deploy-frontend:
  stage: build
  script:
  - docker build -f docker/food-truck-frontend.Dockerfile --iidfile imageid.txt -t https://dashboard.heroku.com/apps/food-truck-finder-2-prod ./food-truck-frontend
  - docker login -u sam_hobbs1@baylor.edu -p 6be52674-0cd9-4295-88ca-0a8b9868f3c2 https://dashboard.heroku.com
  - docker tag $(cat imageid.txt) registry.heroku.com/food-truck-frontend2/web
  - docker push registry.heroku.com/food-truck-frontend2/web
  - apk add --no-cache curl
  - echo "Docker Image ID is $(cat imageid.txt)"
  - |-
    #deploy our new docker image
